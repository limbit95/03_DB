-- 1. 카테고리 테이블
CREATE TABLE CATEGORIES(
	CATEGORY_ID NUMBER PRIMARY KEY,
	CATEGORY_NAME VARCHAR2(100) UNIQUE
);

INSERT INTO CATEGORIES VALUES(1, '스마트폰');
INSERT INTO CATEGORIES VALUES(2, 'TV');
INSERT INTO CATEGORIES VALUES(3, 'Gaming');

-- 2. 상품 정보 테이블
CREATE TABLE PRODUCTS(
	PRODUCT_ID NUMBER PRIMARY KEY,
	PRODUCT_NAME VARCHAR2(100) NOT NULL,
	CATEGORY NUMBER REFERENCES CATEGORIES ON DELETE SET NULL,
	PRICE NUMBER DEFAULT 0,
	STOCK_QUANTITY NUMBER DEFAULT 0
);

INSERT INTO PRODUCTS VALUES(101, 'Apple iPhone 12', 1, 1500000, 30);
INSERT INTO PRODUCTS VALUES(102, 'Samsung Galaxy S24', 1, 1800000, 50);
INSERT INTO PRODUCTS VALUES(201, 'LG OLED TV', 2, 3600000, 10);
INSERT INTO PRODUCTS VALUES(301, 'Sony PlayStation 5', 3, 700000, 15);

-- 3. 고객 정보 테이블
CREATE TABLE CUSTOMERS(
	CUSTOMER_ID NUMBER PRIMARY KEY,
	NAME VARCHAR2(20) NOT NULL,
	GENDER CHAR(3) CHECK( GENDER IN('남', '여') ),
	ADDRESS VARCHAR2(100),
	PHONE VARCHAR2(30)
);

INSERT INTO CUSTOMERS VALUES(1, '홍길동', '남', '서울시 성동구 왕십리', '010-1111-2222');
INSERT INTO CUSTOMERS VALUES(2, '유관순', '여', '서울시 종로구 안국동', '010-3333-1111');

-- 4. 주문 정보 테이블
CREATE TABLE ORDERS(
	ORDER_ID NUMBER PRIMARY KEY,
	CUSTOMER_ID NUMBER REFERENCES CUSTOMERS ON DELETE CASCADE,
	ORDER_DATE DATE DEFAULT SYSDATE,
	STATUS CHAR(1) DEFAULT 'N', CHECK( STATUS IN('Y', 'N')) 
);

INSERT INTO ORDERS VALUES(576, 1, '2024-02-29', 'N');
INSERT INTO ORDERS VALUES(978, 2, '2024-03-11', 'Y');
INSERT INTO ORDERS VALUES(777, 2, '2024-03-11', 'N');
INSERT INTO ORDERS VALUES(134, 1, '2022-12-25', 'Y');
INSERT INTO ORDERS VALUES(499, 1, '2020-01-03', 'Y');

-- 5. 주문 상세 정보 테이블
CREATE TABLE ORDER_DETAILS(
	ORDER_DETAIL_ID NUMBER PRIMARY KEY,
	ORDER_ID NUMBER REFERENCES ORDERS ON DELETE CASCADE,
	PRODUCT_ID NUMBER REFERENCES PRODUCTS ON DELETE SET NULL,
	QUANTITY NUMBER,
	PRICE_PER_UNIT NUMBER
);

INSERT INTO ORDER_DETAILS VALUES(111, 576, 101, 1, 1500000);
INSERT INTO ORDER_DETAILS VALUES(222, 978, 201, 2, 3600000);
INSERT INTO ORDER_DETAILS VALUES(333, 978, 102, 1, 1800000);
INSERT INTO ORDER_DETAILS VALUES(444, 777, 301, 5, 700000);
INSERT INTO ORDER_DETAILS VALUES(555, 134, 102, 1, 1800000);
INSERT INTO ORDER_DETAILS VALUES(666, 499, 201, 3, 3600000);

COMMIT;

--1. 쇼핑몰 관리자가 주문은 받았으나, 아직 처리가 안된 주문을 처리하려고
--한다. 현재 주문 내역 중 아직 처리되지 않은 주문을 조회하시오. 😀
--(고객명, 주문일, 처리상태)
SELECT NAME "고객명", ORDER_DATE "주문일", STATUS "처리상태"
FROM CUSTOMERS
JOIN ORDERS USING(CUSTOMER_ID)
WHERE STATUS = 'N';

--2. 홍길동 고객이 이번년도에 본인이 주문한 전체 내역을 조회하고자 한다.
--주문번호, 주문날짜, 처리상태 조회하시오
SELECT ORDER_ID "주문번호", ORDER_DATE "주문날짜", STATUS "처리상태"
FROM ORDERS
WHERE CUSTOMER_ID = (SELECT CUSTOMER_ID
										 FROM CUSTOMERS
										 WHERE NAME = '홍길동')
AND EXTRACT(YEAR FROM ORDER_DATE) = '2024';

--3. 유관순 고객이 지금껏 주문한 상품의 수량 별 금액을 조회하려고 한다.
--주문번호, 상품명, 수량, 개별금액, 주문별금액을 조회하시오
SELECT ORDER_ID "주문번호", PRODUCT_NAME "상품명", 
QUANTITY "수량", PRICE_PER_UNIT "개별금액", (PRICE_PER_UNIT * QUANTITY) "주문별 금액합계"
FROM ORDER_DETAILS
JOIN PRODUCTS USING(PRODUCT_ID)
WHERE ORDER_ID IN (SELECT ORDER_ID
									FROM ORDERS
									WHERE CUSTOMER_ID = (SELECT CUSTOMER_ID
																			 FROM CUSTOMERS
																			 WHERE NAME = '유관순'))
ORDER BY 1;